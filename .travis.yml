branches:
  only:
    - master
    - v4
    - v7
    - legacy-1.x
    - /^\d+\.\d+\.\d+$/
stages:
  - name: pretest
    if: type != push OR branch =~ /^\d+\.\d+\.\d+$/
  - name: lint
    if: NOT branch =~ ^\d+\.\d+\.\d+$
  - name: compile
    if: type != push OR branch =~ /^\d+\.\d+\.\d+$/
  - name: test
    if: type != push OR branch =~ /^\d+\.\d+\.\d+$/
  - name: deploy
    if: branch =~ ^\d+\.\d+\.\d+$
jobs:
  include:
    - stage: pretest
      name: Validate Linux has complete test coverage
      install: swift test --generate-linuxmain -Xswiftc -target -Xswiftc x86_64-apple-macosx10.12
      script: git diff --exit-code
      os: osx
      osx_image: xcode10.1
      language: swift

    - &carthage
      stage: compile
      osx_image: xcode9.2
      name: Carthage / Xcode 9.2
      os: osx
      language: objective-c
      script: carthage build --no-skip-current --configuration Release
    - <<: *carthage
      osx_image: xcode9.4
      name: Carthage / Xcode 9.4
    - <<: *carthage
      osx_image: xcode10.1
      name: Carthage / Xcode 10.0

    - &pod
      stage: lint
      osx_image: xcode8.3
      env: SWIFT=3.1
      name: pod lib lint --swift-version=3.1
      os: osx
      cache: cocoapods
      language: objective-c
      before_install: mv .github/PromiseKit.podspec .
      install: gem install cocoapods --prerelease --version 1.6.0.rc.2
      script: pod lib lint --subspec=PromiseKit/CorePromise --fail-fast --swift-version=$SWIFT
    - <<: *pod
      osx_image: xcode9.2
      env: SWIFT=3.2
      name: pod lib lint --swift-version=3.2
    - <<: *pod
      osx_image: xcode9.4
      env: SWIFT=3.3
      name: pod lib lint --swift-version=3.3
    - <<: *pod
      osx_image: xcode10.1
      env: SWIFT=3.4
      name: pod lib lint --swift-version=3.4
    - <<: *pod
      osx_image: xcode9.2
      env: SWIFT=4.0
      name: pod lib lint --swift-version=4.0
    - <<: *pod
      osx_image: xcode9.4
      env: SWIFT=4.1
      name: pod lib lint --swift-version=4.1
    - <<: *pod
      osx_image: xcode10.1
      env: SWIFT=4.2
      name: pod lib lint --swift-version=4.2

    - &linux
      stage: compile
      env: SWIFT_BUILD_VERSION=3 SWIFT_VERSION=4.0.3
      name: Linux / Swift 3.2
      os: linux
      dist: trusty
      sudo: false
      language: generic
      before_install: eval "$(curl -sL https://swiftenv.fuller.li/install.sh)"
      install: swift build -Xswiftc -swift-version -Xswiftc $SWIFT_BUILD_VERSION
      script: "true"
    - <<: *linux
      env: SWIFT_BUILD_VERSION=3 SWIFT_VERSION=4.1.2
      name: Linux / Swift 3.3
    - <<: *linux
      env: SWIFT_BUILD_VERSION=3 SWIFT_VERSION=4.2.1
      name: Linux / Swift 3.4
    - <<: *linux
      env: SWIFT_BUILD_VERSION=4 SWIFT_VERSION=4.0.3
      name: Linux / Swift 4.0
      stage: test
      script: swift test -Xswiftc -swift-version -Xswiftc 4
    - <<: *linux
      env: SWIFT_BUILD_VERSION=4 SWIFT_VERSION=4.1.2
      name: Linux / Swift 4.1
    - <<: *linux
      env: SWIFT_BUILD_VERSION=4 SWIFT_VERSION=4.2.1
      name: Linux / Swift 4.2
      stage: test
      script: swift test -Xswiftc -swift-version -Xswiftc 4
    - <<: *linux
      env: SWIFT_BUILD_VERSION=5 SWIFT_VERSION=5.0-DEVELOPMENT-SNAPSHOT-2019-01-22-a
      name: Linux / Swift 5.0 (2019-01-22)
      stage: test
      script: swift test -Xswiftc -swift-version -Xswiftc 5

    - &test
      stage: test
      name: macOS / Xcode 9.2 / Swift 4.0.3
      osx_image: xcode9.2
      os: osx
      language: objective-c
      env: DST='platform=OS X,arch=x86_64'
      before_install: |
        set -exo pipefail
        gem install xcpretty
      install:
        xcodebuild -scheme PromiseKit -target PromiseKit -destination "$DST" SWIFT_TREAT_WARNINGS_AS_ERRORS=YES build | xcpretty
      script:
        xcodebuild -scheme PromiseKit -destination="$DST" -enableCodeCoverage YES SWIFT_VERSION=4 test | xcpretty
      after_success:
        bash <(curl -s https://codecov.io/bash)
    - <<: *test
      name: macOS / Xcode 9.4 / Swift 4.1.2
      osx_image: xcode9.4
      script:
        xcodebuild -scheme PromiseKit -destination "$DST" -enableCodeCoverage YES SWIFT_VERSION=4 test | xcpretty
    - <<: *test
      name: macOS / Xcode 10.1 / Swift 4.2.1
      osx_image: xcode10.1
      script:
        xcodebuild -scheme PromiseKit -destination "$DST" -enableCodeCoverage YES SWIFT_VERSION=4 test | xcpretty

    - <<: *test
      name: iOS / Xcode 10.1
      osx_image: xcode10.1
      env: DST='OS=12.1,name=iPhone SE'

    - <<: *test
      name: tvOS / Xcode 10.1
      env: DST='OS=12.1,name=Apple TV'
      osx_image: xcode10.1

    - stage: test
      name: Promises/A+ (via WebKit JavaScript Bridge)
      language: objective-c
      os: osx
      osx_image: xcode10.1
      before_install: |
        set -exo pipefail
        npm install -g npm
        gem install xcpretty
      install:
        bash -c "cd Tests/JS-A+; npm ci &>/dev/null && npm run --hide-modules build"
      script: |
        set -exo pipefail
        xcodebuild -scheme PromiseKit -target PMKJSA+Tests -enableCodeCoverage NO -only-testing:PMKJSA+Tests test | xcpretty
      #FIXME ^^ still _builds_ *all* the tests
      cache:
        directories:
          - Tests/JS-A+/build
          - Tests/JS-A+/node_modules

    - &swiftpm
      stage: compile
      name: SwiftPM / macOS / Xcode 9.4 / Swift 3.3
      os: osx
      osx_image: xcode9.4
      script: swift build
    - <<: *swiftpm
      osx_image: xcode10.1
      name: SwiftPM / macOS / Xcode 10.1 / Swift 4.2

    - stage: deploy
      script: |
        set -exo pipefail
        gem install cocoapods --prerelease --version 1.6.0.rc.2
        mv .github/PromiseKit.podspec .
        pod trunk push --verbose --allow-warnings --swift-version=4.2 | ruby -e 'ARGF.each{ print "." }'
      # ^^ pipe because Travis times us out if there is no output
      # AND `pod` defaults to hardly any output
      # BUT `--verbose` generates so much output that Travis kills our script due to *too much* output!
      # --allow-warnings because Bolts generates warnings and CocoaPods fails you even if your deps emit warnings
      os: osx
      osx_image: xcode10.0 # 10.0 or CocoaPods barfs
      language: objective-c

    - stage: deploy
      name: Generate Documentation
      os: osx
      osx_image: xcode10.1
      language: swift
      install: gem install jazzy
      script: |
        set -exo pipefail
        jazzy \
          --theme fullwidth \
          --output foo \
          --documentation=Documentation/*.md \
          --readme Documentation/README.md \
          --github_url https://github.com/mxcl/PromiseKit \
          --xcodebuild-arguments UseModernBuildSystem=NO \
          --module PromiseKit
          --module-version "$TRAVIS_TAG"
        git checkout gh-pages
        rm -rf reference
        mv foo reference
        git add reference
        git config user.name  "Travis"
        git config user.email "bot@travis-ci.com"
        git commit -m "Updated docs for v$TRAVIS_TAG"
        git remote add secure-origin https://${GITHUB_TOKEN}@github.com/mxcl/PromiseKit.git
        git push secure-origin gh-pages

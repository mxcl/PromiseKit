name: CI
on:
  pull_request:
    paths:
      - Sources/**
      - Tests/**
      - .github/workflows/ci.yml
concurrency:
  group: ${{ github.head_ref }}
  cancel-in-progress: true
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: harupy/find-trailing-whitespace@v1.0

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        swift:
        - swift:5.3
        - swift:5.4
        - swiftlang/swift:nightly-5.5
    container:
      image: ${{ matrix.swift }}
    steps:
    - uses: actions/checkout@v2
    - run: swift test --enable-code-coverage --parallel --enable-test-discovery

    - name: Generate Coverage Report
      run: |
        apt-get -qq update
        apt-get -qq install curl  # for codecov action ðŸ™„
        b=$(swift build --show-bin-path)
        llvm-cov export \
          -format lcov \
          -instr-profile="$b"/codecov/default.profdata \
          --ignore-filename-regex='\.build/' \
          "$b"/*.xctest \
          > info.lcov
    - uses: codecov/codecov-action@v1
      with:
        file: ./info.lcov

  apple:
    runs-on: ${{ matrix.swift == '5.3' && 'macos-10.15' || 'macos-11' }}
    strategy:
      matrix:
        platform:
          - macOS
          - tvOS
          - iOS
          - watchOS
        swift:
          - 5.3
          - 5.4
          - 5.5
    name: ${{ matrix.platform }} (${{ matrix.swift }})
    steps:
    - uses: actions/checkout@v2
    - run: |
        cd Tests/A+/JavaScript
        npm ci
        npm run build
      if: ${{ matrix.platform == 'macOS' }}
    - uses: mxcl/xcodebuild@v1
      with:
        swift: ${{ matrix.swift }}
        platform: ${{ matrix.platform }}
        code-coverage: true
        warnings-as-errors: true
    - uses: codecov/codecov-action@v1

  windows:
    runs-on: windows-latest
    steps:
      - uses: seanmiddleditch/gha-setup-vsdevenv@v3
      - run: |
          Install-Binary -Url "https://swift.org/builds/swift-5.4.1-release/windows10/swift-5.4.1-RELEASE/swift-5.4.1-RELEASE-windows10.exe" -Name "installer.exe" -ArgumentList ("-q")
      - run: |
          echo "SDKROOT=C:\Library\Developer\Platforms\Windows.platform\Developer\SDKs\Windows.sdk" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "DEVELOPER_DIR=C:\Library\Developer" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      - run: |
          echo "C:\Library\Swift-development\bin;C:\Library\icu-67\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "C:\Library\Developer\Toolchains\unknown-Asserts-development.xctoolchain\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - run: |
          Copy-Item "$env:SDKROOT\usr\share\ucrt.modulemap" -destination "$env:UniversalCRTSdkDir\Include\$env:UCRTVersion\ucrt\module.modulemap"
          Copy-Item "$env:SDKROOT\usr\share\visualc.modulemap" -destination "$env:VCToolsInstallDir\include\module.modulemap"
          Copy-Item "$env:SDKROOT\usr\share\visualc.apinotes" -destination "$env:VCToolsInstallDir\include\visualc.apinotes"
          Copy-Item "$env:SDKROOT\usr\share\winsdk.modulemap" -destination "$env:UniversalCRTSdkDir\Include\$env:UCRTVersion\um\module.modulemap"
      - uses: actions/checkout@v2
      - run: swift test --parallel
